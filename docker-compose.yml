services:
  api:
    build:
      context: ./src/FileHubAPI
      dockerfile: FileHub.Presentation/Dockerfile
    ports:
      - 5002:5002
      - 5001:5001
    volumes:
      - "/src/FileHub.Presentation/bin"
      - "/src/FileHub.Presentation/obj"
      - "/src/FileHub.Core/bin"
      - "/src/FileHub.Core/obj"
      - "/src/FileHub.Infrastructure/bin"
      - "/src/FileHub.Infrastructure/obj"
    environment:
      - ASPNETCORE_Kestrel__Certificates__Default__Password=fllkwefiwejf23049uwlekjf.sEFWEFGR98^&$
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - ASPNETCORE_URLS=https://+:5002;http://+:5001
      - ASPNETCORE_HTTPS_PORT=5002
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - minio
      - postgres
  
  postgres:
    image: postgres:14.5
    environment:
      POSTGRES_DB: "filehub_db"
      POSTGRES_USER: "user"
      POSTGRES_PASSWORD: "pass"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    ports:
      - "5432:5432"

  minio:
    image: minio/minio
    command: server --console-address ":9001" /data/
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      MINIO_ROOT_USER: "useruser"
      MINIO_ROOT_PASSWORD: "passpass"
    networks:
      default:
  
  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://minio:9000 useruser passpass;
      /usr/bin/mc mb myminio/common-bucket;
      /usr/bin/mc anonymous set private myminio/common-bucket;
      exit 0;
      "

name: filehub